import Cookies from 'js-cookie';

export const createTempPlaylist = (spotifyUserID) => {
  const authToken = Cookies.get('spotifyAuthToken');
  return fetch(`https://api.spotify.com/v1/users/${spotifyUserID}/playlists`, {
    method: 'POST',
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json',
      Authorization: `Bearer ${authToken}`,
    },
    body: JSON.stringify({
      name: 'Soundtrip Temp Playlist',
      description:
        'This is your temporary playlist generated by Soundtrip.app. This playlist will dissappear when you logout of Soundtrip.',
      public: false,
    }),
  })
    .then((response) => response.json())
    .then((data) => {
      Cookies.set('tempPlaylistID', data.id);
    })
    .catch((error) => {
      console.error('Error:', error);
    });
};

export const deleteTempPlaylist = (playlist_id) => {
  const authToken = Cookies.get('spotifyAuthToken');
  return fetch(
    `https://api.spotify.com/v1/playlists/${playlist_id}/followers`,
    {
      method: 'DELETE',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
        Authorization: `Bearer ${authToken}`,
      },
    }
  )
    .then(() => {
      console.log('Success: playlist deleted');
    })
    .catch((error) => {
      console.error('Error:', error);
    });
};

//range length will be dynamic as will tracklist
export const replacePlaylistTracks = (playlist_id, tracks) => {
  const authToken = Cookies.get('spotifyAuthToken');
  // const tracksTest =
  //   'spotify:track:1uP8UVMXcTJn28TbhfR2Wo,spotify:track:6BKVev5kACyEaolcJkaUbz,spotify:track:5kznDEv5T6VtN8FdIB1R5C,spotify:track:3qKgOxaVi0dUVV1vtrbH1K,spotify:track:3zIiZrCROmhS9ERPdEHXYa';
  return fetch(
    `https://api.spotify.com/v1/playlists/${playlist_id}/tracks?uris=${tracks}`,
    {
      method: 'PUT',
      body: JSON.stringify({
        range_start: 1,
        insert_before: 1,
        range_length: 5,
      }),
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
        Authorization: `Bearer ${authToken}`,
      },
    }
  )
    .then(() => {
      console.log('Success: playlist tracks replaces');
    })
    .catch((error) => {
      console.error('Error:', error);
    });
};

//get list of tracks from spotify
export const setPlaylistTrackList = async (currentArtists) => {
  const authToken = Cookies.get('spotifyAuthToken');

  const trackUris = await Promise.all(
    currentArtists.map(async (artist) => {
      const response = await fetch(
        `https://api.spotify.com/v1/search?q=${artist}&type=track&market=CA&limit=2`,
        {
          method: 'GET',
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
            Authorization: `Bearer ${authToken}`,
          },
        }
      );
      const data = await response.json();

      console.log('Success: playlist tracks replaces');
      // data.tracks.items.forEach((item) => {
      //   console.log('URI', item.uri);
      //   // trackList.push(item.uri);
      // });

      return data.tracks.items.map((item) => item.uri);
    })
  );

  console.log('FINAL TRACK LIST', trackUris);
  return trackUris.flat();
};
